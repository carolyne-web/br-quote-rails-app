<!-- app/views/quotations/new.html.erb -->
<div class="min-h-screen bg-gray-50 flex" data-controller="quotation-form">
  <%= form_with model: @quotation, local: true, class: "w-full flex" do |f| %>
    <!-- Sidebar -->
    <aside class="w-64 bg-white shadow-lg flex flex-col sticky top-0 h-screen p-4 justify-between shadow rounded-2xl">
      <div class="flex-1 overflow-y-auto">
        <h2 class="text-lg font-semibold mb-4">Quote Sections</h2>
        <ul class="space-y-2 text-sm text-gray-700">
          <li class="font-medium text-blue-600 cursor-pointer" data-section="project-info">Campaign Information</li>
          <li class="cursor-pointer hover:text-blue-600" data-section="talent-categories">Talent Categories</li>
          <li class="cursor-pointer hover:text-blue-600" data-section="territories">Territories</li>
          <li class="cursor-pointer hover:text-blue-600" data-section="licensing">Usage & Licensing</li>
          <li class="cursor-pointer hover:text-blue-600" data-section="guarantee">Guarantee & Final</li>
        </ul>
      </div>
      <div class="border-t pt-4 flex-shrink-0">
        <p class="text-sm text-gray-500">Current Total</p>
        <p class="text-2xl font-bold" id="current-total">R 0.00</p>
      </div>
    </aside>

    <!-- Main Content -->
    <main class="flex-1 space-y-4 px-4">
      
      <!-- Error Messages -->
      <% if @quotation.errors.any? %>
        <div class="bg-red-50 border border-red-200 text-red-600 px-4 py-3 rounded-lg">
          <h3 class="font-semibold mb-2">Please correct the following errors:</h3>
          <ul class="list-disc list-inside">
            <% @quotation.errors.full_messages.each do |message| %>
              <li><%= message %></li>
            <% end %>
          </ul>
        </div>
      <% end %>
      
      <!-- Project Information -->
      <section id="project-info" class="bg-white shadow rounded-2xl p-4">
        <div class="flex items-center justify-between mb-4">
          <h3 class="text-lg font-semibold">Campaign Information</h3>
          <span class="text-sm text-gray-400">Step 1 of 6</span>
        </div>
        
        <div class="mb-4">
          <%= f.label :campaign_name, "Campaign Name", class: "block text-sm font-medium text-gray-600" %>
          <%= f.text_field :campaign_name, required: true, class: "w-full mt-1 border rounded-lg px-3 py-2 text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500", placeholder: "Enter campaign name" %>
        </div>

        <div class="mb-4">
          <label class="block text-sm font-medium text-gray-600 mb-3">Product Type</label>
          <div class="grid grid-cols-1 md:grid-cols-3 gap-3">
            <label class="flex items-center space-x-2 p-3 border rounded-lg hover:bg-gray-50 cursor-pointer">
              <%= f.radio_button :product_type, 'adult', class: "text-blue-600 focus:ring-blue-500" %>
              <span class="text-sm font-medium">Adult Product</span>
            </label>
            <label class="flex items-center space-x-2 p-3 border rounded-lg hover:bg-gray-50 cursor-pointer">
              <%= f.radio_button :product_type, 'kids', class: "text-blue-600 focus:ring-blue-500" %>
              <span class="text-sm font-medium">Kids Product</span>
            </label>
            <label class="flex items-center space-x-2 p-3 border rounded-lg hover:bg-gray-50 cursor-pointer">
              <%= f.radio_button :product_type, 'family', class: "text-blue-600 focus:ring-blue-500" %>
              <span class="text-sm font-medium">Family Product</span>
            </label>
          </div>
        </div>

        <div class="hidden">
          <%= f.label :status, "Status", class: "block text-sm font-medium text-gray-600" %>
          <%= f.select :status, options_for_select(Quotation::STATUS_OPTIONS.map { |s| [s.capitalize, s] }, @quotation.status), {}, class: "w-full mt-1 border rounded-lg px-3 py-2 text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500" %>
        </div>
      </section>

      <!-- Talent Categories -->
      <section id="talent-categories" class="bg-white shadow rounded-2xl p-4">
        <div class="flex items-center justify-between mb-4">
          <h3 class="text-lg font-semibold">Select Talent Categories</h3>
          <span class="text-sm text-gray-400">Step 2 of 6</span>
        </div>
        
        <!-- Talent Category Buttons -->
        <div class="mb-4">
          <div class="flex flex-wrap gap-2">
            <% TalentCategory::TYPES.each do |type_id, type_name| %>
              <button type="button" class="talent-btn flex items-center px-4 py-2 border-2 border-gray-300 rounded-lg hover:bg-blue-50 hover:border-blue-300 transition-colors text-sm font-medium whitespace-nowrap cursor-pointer" data-category="<%= type_id %>">
                <span class="text-sm font-bold mr-2 text-blue-600"><%= TalentCategory.new(category_type: type_id).icon %></span>
                <span><%= type_name %></span>
              </button>
            <% end %>
          </div>
        </div>
        
        <!-- Selected Talent Categories -->
    <div class="selected-talent-categories">
    <% TalentCategory::TYPES.each do |type_id, type_name| %>
      <div class="talent-category-section hidden mb-8 p-6 bg-gray-50 rounded-lg border-l-4 border-blue-500" id="talent-category-<%= type_id %>">
        <div class="flex items-center justify-between mb-6">
          <div class="flex items-center">
            <span class="text-2xl mr-3"><%= TalentCategory.new(category_type: type_id).icon %></span>
            <div>
              <h4 class="font-bold text-xl text-gray-900"><%= type_name %></h4>
              
            </div>
          </div>
          <button type="button" class="px-3 py-2 text-sm text-red-600 hover:text-red-800 hover:bg-red-50 rounded-lg transition-colors" onclick="removeTalentCategory(<%= type_id %>)">
            Remove Category
          </button>
        </div>
        
        <!-- Horizontal Input Layout -->
        <div class="talent-input-grid mb-6">
          <!-- Column Headers -->
          <div class="grid grid-cols-9 gap-2 mb-3">
            <div class="text-xs font-semibold text-gray-700 text-center">Talent</div>
            <div class="text-xs font-semibold text-gray-700 text-center">Rate +/-</div>
            <div class="text-xs font-semibold text-gray-700 text-center">Shoot Days</div>
            <div class="text-xs font-semibold text-gray-700 text-center">Rehearsal</div>
            <div class="text-xs font-semibold text-gray-700 text-center">Down Days</div>
            <div class="text-xs font-semibold text-gray-700 text-center">Travel Days</div>
            <div class="text-xs font-semibold text-gray-700 text-center">Overtime</div>
            <div class="text-xs font-semibold text-gray-700 text-center"></div>
            <div class="text-xs font-semibold text-gray-700 text-center"></div>
          </div>
          
          <!-- First Input Row -->
          <div class="talent-input-row grid grid-cols-9 gap-2 mb-2">
            <!-- Talent Count -->
            <div>
              <%= number_field_tag "talent[#{type_id}][talent_count]", 0, 
                  min: 0, max: 99,
                  class: "w-full px-2 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-center",
                  data: { talent_input: type_id } %>
            </div>

              <!-- Rate Adjustment -->
            <div>
              <%= number_field_tag "talent[#{type_id}][adjusted_rate]", 
                      TalentCategory.new(category_type: type_id).default_daily_rate,
                  step: 500,
                  class: "w-full px-2 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-center",
                  data: { adjusted_rate_input: type_id },
                  title: "Full adjusted rate" %>
            </div>

            <!-- Days Count -->
            <div>
              <%= number_field_tag "talent[#{type_id}][days_count]", 1, 
                  min: 1,
                  class: "w-full px-2 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-center",
                  data: { days_input: type_id } %>
            </div>
            
            <!-- Rehearsal Days (50% rate) -->
            <div>
              <%= number_field_tag "talent[#{type_id}][rehearsal_days]", 0, 
                  min: 0,
                  class: "w-full px-2 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-center",
                  data: { rehearsal_input: type_id },
                  title: "50% of day rate" %>
            </div>
            
            <!-- Down Days (50% rate) -->
            <div>
              <%= number_field_tag "talent[#{type_id}][down_days]", 0, 
                  min: 0,
                  class: "w-full px-2 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-center",
                  data: { down_input: type_id },
                  title: "50% of day rate" %>
            </div>
            
            <!-- Travel Days (50% rate) -->
            <div>
              <%= number_field_tag "talent[#{type_id}][travel_days]", 0, 
                  min: 0,
                  class: "w-full px-2 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-center",
                  data: { travel_input: type_id },
                  title: "50% of day rate" %>
            </div>
            
            <!-- Overtime Hours (10% per hour) -->
            <div>
              <%= number_field_tag "talent[#{type_id}][overtime_hours]", 0, 
                  min: 0, step: 0.5,
                  class: "w-full px-2 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-center",
                  data: { overtime_input: type_id },
                  title: "10% of day rate per hour" %>
            </div>
            
            <!-- Night Button -->
            <div class="flex flex-col items-center">
              <button type="button" 
                      class="night-btn w-full px-2 py-2 text-xs border-2 border-gray-300 rounded-lg hover:bg-yellow-50 hover:border-yellow-300 transition-colors font-medium mb-1"
                      data-category="<%= type_id %>"
                      data-active="false"
                      title="Night shoot calculation">
                + Night Fee
              </button>
              <input type="number" 
                     name="talent[<%= type_id %>][night_count]" 
                     min="1" 
                     value="1" 
                     class="nights-input w-full px-1 py-1 text-xs border border-gray-300 rounded text-center hidden"
                     data-category="<%= type_id %>"
                     placeholder="Nights">
              <%= hidden_field_tag "talent[#{type_id}][night_premium]", "false", data: { night_field: type_id } %>
            </div>
            
            <!-- Action Button - Add Line -->
            <div>
              <button type="button" 
                      class="add-line-btn w-full text-xs text-blue-600 rounded-lg font-medium"
                      data-category="<%= type_id %>"
                      title="Add another talent line">
                + Line
              </button>
            </div>
          </div>
          
          <!-- Additional Lines Container -->
          <div class="additional-lines" data-category="<%= type_id %>">
            <!-- Additional talent lines will be added here -->
          </div>
        </div>
        <!-- Category Total Display -->
        <div class="category-total p-4 bg-blue-50 rounded-lg">
          <div class="flex justify-between items-center">
            <span class="font-semibold text-gray-900">Category Total:</span>
            <span class="text-lg font-bold text-blue-600" id="category-total-<%= type_id %>">R0</span>
          </div>
          
        </div>
      </div>
    <% end %>
  </div>
  
  <!-- Talent Category Totals -->
  <div id="category-totals" class="mt-6 bg-blue-50 rounded-lg p-4 border border-blue-200">
    <h4 class="text-lg font-semibold mb-3 text-gray-800">Category Summary</h4>
    <div id="category-totals-list" class="space-y-2">
      <!-- Category totals will be populated by JavaScript -->
    </div>
    <div class="border-t border-blue-200 mt-4 pt-4">
      <div class="flex justify-between items-center">
        <span class="font-semibold text-gray-800">Total (without days):</span>
        <span class="text-xl font-bold text-blue-600" id="talent-base-total">R0</span>
      </div>
      <div class="flex justify-between items-center">
        <span class="font-semibold text-gray-800">Total (before territories & licensing):</span>
        <span class="text-xl font-bold text-blue-600" id="talent-grand-total">R0</span>
      </div>
    </div>
  </div>
</section>



      <!-- Territories -->
      <section id="territories" class="bg-white shadow rounded-2xl p-4">
        <div class="flex items-center justify-between mb-4">
          <h3 class="text-lg font-semibold">Territories</h3>
          <span class="text-sm text-gray-400">Step 3 of 5</span>
        </div>
        
        <div class="mb-4">
          <div class="bg-blue-50 border border-blue-200 rounded-lg p-3 mb-4">
            <div class="text-sm text-blue-800">
              <strong>Territory Logic:</strong> Multiple territories are additive. Example: East Europe (400%) + Pan African (400%) = 800% total.
            </div>
          </div>
        </div>
        
        <!-- Search Bar -->
        <div class="mb-4">
          <input type="text" id="territory-search" placeholder="Search territories (type 3+ letters)..." 
                 class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
        </div>
        
        <!-- Territories List -->
        <div class="max-h-80 overflow-y-auto border border-gray-200 rounded-lg">
          <div id="territories-list" class="space-y-1 p-2">
            <% @territories.group_by(&:group_name).each do |group_name, territories| %>
              <% territories.each do |territory| %>
                <label class="territory-item flex items-center justify-between p-3 border-b border-gray-100 hover:bg-gray-50 cursor-pointer" 
                       data-name="<%= territory.name.downcase %>">
                  <div class="flex items-center">
                    <%= check_box_tag "territories[]", territory.id, false, 
                        class: "mr-3 rounded text-blue-600 focus:ring-blue-500 territory-checkbox",
                        data: { territory_id: territory.id, territory_name: territory.name, percentage: territory.percentage } %>
                    <div class="text-sm">
                      <div class="font-medium text-gray-900"><%= territory.name %></div>
                      <div class="text-xs text-gray-500"><%= group_name %></div>
                    </div>
                  </div>
                  <div class="text-sm font-medium text-blue-600"><%= territory.percentage %>%</div>
                </label>
              <% end %>
            <% end %>
          </div>
        </div>
      </section>

      <!-- Usage & Licensing -->
      <%= fields_for :quotation_detail, @quotation.quotation_detail || @quotation.build_quotation_detail do |detail_fields| %>
        <!-- Hidden field to maintain form compatibility -->
        <%= detail_fields.hidden_field :shoot_days, value: 1 %>
        <section id="licensing" class="bg-white shadow rounded-2xl p-4">
          <div class="flex items-center justify-between mb-4">
            <h3 class="text-lg font-semibold">Usage & Licensing</h3>
            <span class="text-sm text-gray-400">Step 4 of 5</span>
          </div>
          
          <div class="space-y-6">
            <div>
              <label class="block text-sm font-medium text-gray-600 mb-3">Select Media Type(s)</label>
              <div class="grid grid-cols-1 md:grid-cols-2 gap-3 mb-3">
                <label class="flex items-center space-x-2 p-3 border rounded-lg hover:bg-gray-50 cursor-pointer">
                  <%= check_box_tag "media_types[]", "all_media", false, class: "mr-3 rounded text-blue-600 focus:ring-blue-500" %>
                  <span class="text-sm font-medium">All Media</span>
                </label>
                <label class="flex items-center space-x-2 p-3 border rounded-lg hover:bg-gray-50 cursor-pointer">
                  <%= check_box_tag "media_types[]", "all_moving", false, class: "mr-3 rounded text-blue-600 focus:ring-blue-500" %>
                  <span class="text-sm font-medium">All Moving Media</span>
                </label>
                <label class="flex items-center space-x-2 p-3 border rounded-lg hover:bg-gray-50 cursor-pointer">
                  <%= check_box_tag "media_types[]", "internet", false, class: "mr-3 rounded text-blue-600 focus:ring-blue-500" %>
                  <span class="text-sm font-medium">Internet Only</span>
                </label>
                <label class="flex items-center space-x-2 p-3 border rounded-lg hover:bg-gray-50 cursor-pointer">
                  <%= check_box_tag "media_types[]", "cinema", false, class: "mr-3 rounded text-blue-600 focus:ring-blue-500" %>
                  <span class="text-sm font-medium">Cinema Only</span>
                </label>
                <label class="flex items-center space-x-2 p-3 border rounded-lg hover:bg-gray-50 cursor-pointer">
                  <%= check_box_tag "media_types[]", "tv", false, class: "mr-3 rounded text-blue-600 focus:ring-blue-500" %>
                  <span class="text-sm font-medium">TV Only</span>
                </label>
                <label class="flex items-center space-x-2 p-3 border rounded-lg hover:bg-gray-50 cursor-pointer">
                  <%= check_box_tag "media_types[]", "print", false, class: "mr-3 rounded text-blue-600 focus:ring-blue-500" %>
                  <span class="text-sm font-medium">All Print Media</span>
                </label>
              </div>
              
              <div class="bg-blue-50 border border-blue-200 rounded-lg p-3 mb-4">
                <div class="text-sm text-blue-800">
                  <strong>Media Multiplier Logic:</strong> All Media = 100%, All Moving Media alone = 75%, All Moving Media + 1 other = 75%, 1 other media = 50%, 3+ media = 100%
                </div>
                <div class="text-xs text-blue-600 mt-1">
                  Current multiplier: <span id="media-multiplier">100%</span>
                </div>
              </div>
            </div>
            
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <%= detail_fields.label :duration, "Contract Duration", class: "block text-sm font-medium text-gray-600" %>
                <%= detail_fields.select :duration,
                    options_for_select([
                      ['Up to 3 Months', '3_months'],
                      ['Up to 6 Months', '6_months'],
                      ['12 Months', '12_months'],
                      ['18 Months', '18_months'],
                      ['2 Years', '24_months'],
                      ['36 Months', '36_months']
                    ], '12_months'),
                    {}, class: "w-full mt-1 border rounded-lg px-3 py-2 text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500" %>
              </div>
            </div>
            
            <!-- Exclusivity Section -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <%= detail_fields.label :exclusivity_type, "Exclusivity Level", class: "block text-sm font-medium text-gray-600" %>
                <%= detail_fields.select :exclusivity_type,
                    options_for_select(@exclusivity_options, detail_fields.object.exclusivity_type),
                    { prompt: "Select exclusivity type" },
                    { class: "w-full mt-1 border rounded-lg px-3 py-2 text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500" } %>
              </div>
            </div>
            
            <div class="space-y-2">
              <label class="flex items-center p-2 border rounded-lg hover:bg-gray-50 cursor-pointer">
                <%= detail_fields.check_box :unlimited_stills, class: "mr-3 rounded text-blue-600 focus:ring-blue-500" %>
                <span class="text-sm">Unlimited Stills (+15%)</span>
              </label>
              <label class="flex items-center p-2 border rounded-lg hover:bg-gray-50 cursor-pointer">
                <%= detail_fields.check_box :unlimited_versions, class: "mr-3 rounded text-blue-600 focus:ring-blue-500" %>
                <span class="text-sm">Unlimited Versions (+15%)</span>
              </label>
            </div>
          </div>
        </section>
      <% end %>

      <!-- Guarantee & Manual Adjustments -->
      <section id="guarantee" class="bg-white shadow rounded-2xl p-4">
        <div class="flex items-center justify-between mb-4">
          <h3 class="text-lg font-semibold">Guarantee & Manual Adjustments</h3>
          <span class="text-sm text-gray-400">Step 5 of 5</span>
        </div>
        
        <!-- Guarantee Option -->
        <div class="mb-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
          <label class="flex items-center">
            <%= f.check_box :is_guaranteed, class: "mr-3 rounded text-blue-600 focus:ring-blue-500" %>
            <span class="text-sm font-medium">Apply 25% Guarantee Discount?</span>
          </label>
          <div class="text-xs text-gray-600 mt-2">
            When selected, the final quote will be reduced by 25% as a guarantee discount.
          </div>
        </div>
        
        <!-- Manual Adjustments -->
        <div class="manual-adjustments">
          <h4 class="text-md font-medium text-gray-700 mb-3">Manual Adjustments</h4>
          <div class="mb-3">
            <button type="button" class="text-sm text-blue-600 hover:text-blue-800 add-adjustment">
              + Add Adjustment
            </button>
          </div>
          <div id="adjustments-container">
            <!-- Manual adjustments will be added here dynamically -->
          </div>
        </div>
      </section>

      <!-- Quote Preview -->
      <section class="bg-white shadow rounded-2xl p-4">
        <h3 class="text-lg font-semibold mb-4">Quote Preview</h3>
        
        <div class="bg-gray-50 rounded-lg p-4 mb-6">
          <div class="grid grid-cols-2 gap-6">
            <!-- Talent Summary -->
            <div>
              <h4 class="text-sm font-medium text-gray-600 mb-3">Talent Summary</h4>
              <div id="talent-summary" class="space-y-2 text-sm">
                <div class="text-gray-500 italic">No talent selected</div>
              </div>
            </div>
            
            <!-- Territory Summary -->
            <div>
              <h4 class="text-sm font-medium text-gray-600 mb-3">Selected Territories</h4>
              <div id="territory-summary" class="space-y-1 text-sm max-h-32 overflow-y-auto">
                <div class="text-gray-500 italic">No territories selected</div>
              </div>
            </div>
          </div>
          
          <!-- Cost Breakdown -->
          <div class="mt-6 pt-4 border-t border-gray-200">
            <div class="space-y-2">
              <!-- A: Talent Fees -->
              <div class="bg-gray-50 p-3 rounded-lg">
                <div class="flex justify-between text-sm font-medium">
                  <span class="text-gray-700">A) Talent Fees:</span>
                  <span id="talent-total">R 0.00</span>
                </div>
                <div class="text-xs text-gray-500 mt-1">Base talent fees + standby & overtime</div>
              </div>
              
              <!-- Usage/Buyout Calculation Details -->
              <div class="space-y-1 text-xs text-gray-600 ml-2">
                <div class="flex justify-between">
                  <span>Territory Multiplier:</span>
                  <span id="territory-multiplier">1.00x</span>
                </div>
                <div class="flex justify-between">
                  <span>Media Multiplier:</span>
                  <span id="media-display-multiplier">1.00x</span>
                </div>
                <div class="flex justify-between">
                  <span>Duration Multiplier:</span>
                  <span id="duration-multiplier">1.00x</span>
                </div>
                <div class="flex justify-between">
                  <span>Exclusivity Adjustment:</span>
                  <span id="exclusivity-multiplier">+0%</span>
                </div>
              </div>
              
              <!-- B: Usage/Buyout -->
              <div class="bg-blue-50 p-3 rounded-lg">
                <div class="flex justify-between text-sm font-medium mb-2">
                  <span class="text-gray-700">B) Usage/Buyout:</span>
                  <span id="usage-buyout-total">R 0.00</span>
                </div>
                <div id="usage-buyout-breakdown" class="text-xs text-gray-600 space-y-1">
                  <!-- Category breakdowns will be inserted here -->
                </div>
              </div>
              
              <!-- Additional Options -->
              <div class="flex justify-between text-sm">
                <span class="text-gray-600">Additional Options:</span>
                <span id="additional-fees">R 0.00</span>
              </div>
              
              <!-- C: Total -->
              <div class="bg-green-50 p-3 rounded-lg border-t border-gray-300">
                <div class="flex justify-between font-semibold">
                  <span class="text-gray-800">C) Total Quote (A+B):</span>
                  <span id="total-quote" class="text-blue-600">R 0.00</span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      <!-- Form Actions -->
      <div class="bg-white rounded-2xl p-4 shadow">
        <div class="flex flex-col space-y-3 sm:flex-row sm:space-y-0 sm:space-x-3 sm:justify-end">
          <%= link_to "Cancel", quotations_path, 
              class: "px-6 py-2 border border-gray-300 rounded-lg text-gray-700 bg-white hover:bg-gray-50 transition text-center" %>
          <%= button_tag "Save as Draft", type: "button", 
              class: "px-6 py-2 border border-blue-300 bg-blue-50 text-blue-700 rounded-lg hover:bg-blue-100 transition",
              onclick: "saveDraft()" %>
          <%= f.submit "Generate Final Quote", 
              class: "px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition" %>
        </div>
      </div>
    </main>
  <% end %>
</div>


<script>
document.addEventListener('DOMContentLoaded', function() {
  // Sidebar navigation
  const sidebarItems = document.querySelectorAll('[data-section]');
  const sections = document.querySelectorAll('section[id]');
  
  sidebarItems.forEach(item => {
    item.addEventListener('click', function() {
      const targetSection = document.getElementById(this.dataset.section);
      if (targetSection) {
        targetSection.scrollIntoView({ behavior: 'smooth', block: 'start' });
        
        // Update active sidebar item
        sidebarItems.forEach(i => {
          i.classList.remove('font-medium', 'text-blue-600');
          i.classList.add('text-gray-700');
        });
        this.classList.add('font-medium', 'text-blue-600');
        this.classList.remove('text-gray-700');
      }
    });
  });


  // Territory search functionality
  const territorySearch = document.getElementById('territory-search');
  const territoryItems = document.querySelectorAll('.territory-item');
  
  territorySearch.addEventListener('input', function() {
    const searchTerm = this.value.toLowerCase();
    
    if (searchTerm.length >= 3) {
      territoryItems.forEach(item => {
        const territoryName = item.dataset.name;
        if (territoryName.includes(searchTerm)) {
          item.style.display = 'flex';
        } else {
          item.style.display = 'none';
        }
      });
    } else {
      // Show all items if less than 3 characters
      territoryItems.forEach(item => {
        item.style.display = 'flex';
      });
    }
  });

  // Add days breakdown functionality
  document.querySelectorAll('.btn-add-days-breakdown').forEach(button => {
    button.addEventListener('click', function() {
      const categoryId = this.dataset.category;
      const container = document.querySelector(`.days-on-set-container[data-category="${categoryId}"]`);
      const daysList = container.querySelector('.days-list');

      container.classList.remove('hidden');

      const rowIndex = daysList.children.length;
      const rowHtml = `
        <div class="flex gap-2 items-center">
          <input type="number"
                 name="talent_categories[${categoryId}][days_on_set][${rowIndex}][talent_count]"
                 placeholder="Talent count"
                 min="1"
                 class="flex-1 px-2 py-1 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500">
          <span class="text-gray-500">×</span>
          <input type="number"
                 name="talent_categories[${categoryId}][days_on_set][${rowIndex}][days_count]"
                 placeholder="Days"
                 min="1"
                 class="flex-1 px-2 py-1 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500">
          <button type="button" class="text-red-500 hover:text-red-700 text-sm" onclick="const categoryId = '${categoryId}'; this.parentElement.remove(); updateQuotePreview(); updateBreakdownSummary(categoryId);">
            Remove
          </button>
        </div>
      `;

      daysList.insertAdjacentHTML('beforeend', rowHtml);
      updateQuotePreview();
      updateBreakdownSummary(categoryId);
    });
  });

  // Update breakdown summary for a category
  function updateBreakdownSummary(categoryId) {
    const container = document.querySelector(`.days-on-set-container[data-category="${categoryId}"]`);
    const summaryElement = document.getElementById(`breakdown-summary-${categoryId}`);
    const warningElement = document.getElementById(`validation-warning-${categoryId}`);
    
    if (!container || container.classList.contains('hidden')) {
      return;
    }
    
    let totalTalentDays = 0;
    let maxDaysUsed = 0;
    let totalBreakdownRows = 0;
    const dayBreakdownInputs = container.querySelectorAll('input[name*="talent_count"]');
    
    dayBreakdownInputs.forEach((talentInput, index) => {
      const talentCount = parseInt(talentInput.value) || 0;
      const daysInput = container.querySelectorAll('input[name*="days_count"]')[index];
      const daysCount = parseInt(daysInput?.value) || 0;
      
      if (talentCount > 0 && daysCount > 0) {
        totalTalentDays += talentCount * daysCount;
        maxDaysUsed = Math.max(maxDaysUsed, daysCount);
        totalBreakdownRows++;
      }
    });
    
    if (summaryElement) {
      if (totalBreakdownRows === 0) {
        summaryElement.textContent = `Total: 0 talent-days`;
      } else {
        summaryElement.textContent = `Total: ${totalTalentDays} talent-days (${totalBreakdownRows} breakdown${totalBreakdownRows > 1 ? 's' : ''})`;
      }
    }
    
    // Validate against shoot days - use a more reasonable validation
    const shootDaysInput = document.querySelector('input[name*="shoot_days"]');
    const shootDays = parseInt(shootDaysInput?.value) || 1;
    
    if (warningElement) {
      if (maxDaysUsed > shootDays) {
        warningElement.style.display = 'block';
        warningElement.textContent = `⚠️ Some breakdown entries use more days (${maxDaysUsed}) than total shoot days (${shootDays})`;
      } else if (totalBreakdownRows > 0 && maxDaysUsed > 0) {
        warningElement.style.display = 'none';
      }
    }
  }

  // Media multiplier calculation function
  function calculateMediaMultiplier() {
    const selected = document.querySelectorAll('input[name="media_types[]"]:checked');
    const allMediaSelected = document.querySelector('input[value="all_media"]:checked');
    const allMovingSelected = document.querySelector('input[value="all_moving"]:checked');
    let multiplier = 1.0;
    
    if (allMediaSelected) {
      multiplier = 1.0; // All Media = 100%
    } else if (selected.length === 1 && allMovingSelected) {
      multiplier = 0.75; // All Moving Media alone = 75%
    } else if (selected.length === 1) {
      multiplier = 0.5; // One other media = 50%
    } else if (selected.length === 2) {
      multiplier = 0.75; // Two media (including All Moving Media + other) = 75%
    } else if (selected.length >= 3) {
      multiplier = 1.0; // Three or more media = 100%
    } else {
      multiplier = 1.0; // No selection defaults to 100%
    }
    
    return multiplier;
  }

  // Duration multiplier calculation function
  function calculateDurationMultiplier() {
    const durationSelect = document.querySelector('select[name*="duration"]');
    if (!durationSelect || !durationSelect.value) {
      return 1.0; // Default multiplier
    }
    
    // Map duration values to multipliers using settings
    const durationMultipliers = {
      '3_months': <%= Setting.find_by(key: 'duration_3_months')&.typed_value || 50 %> / 100,
      '6_months': <%= Setting.find_by(key: 'duration_6_months')&.typed_value || 75 %> / 100,
      '12_months': <%= Setting.find_by(key: 'duration_12_months')&.typed_value || 100 %> / 100,
      '18_months': <%= Setting.find_by(key: 'duration_18_months')&.typed_value || 175 %> / 100,
      '24_months': <%= Setting.find_by(key: 'duration_24_months')&.typed_value || 200 %> / 100,
      '36_months': <%= Setting.find_by(key: 'duration_36_months')&.typed_value || 300 %> / 100
    };
    
    return durationMultipliers[durationSelect.value] || 1.0;
  }

  // Enhanced calculation and preview functionality
  function updateQuotePreview() {
    let talentTotal = 0;
    let territoryMultiplier = 1.0;
    let additionalFees = 0;
    
    const talentSummary = document.getElementById('talent-summary');
    const territorySummary = document.getElementById('territory-summary');
    
    // Clear summaries
    talentSummary.innerHTML = '';
    territorySummary.innerHTML = '';
    
    // Get shoot days for calculation
    const shootDaysInput = document.querySelector('input[name*="shoot_days"]');
    const shootDays = parseInt(shootDaysInput?.value) || 1;
    
    // Base rates for each talent category (dynamically loaded from settings)
    const baseRates = {
      1: <%= Setting.find_by(key: 'lead_base_rate')&.typed_value || 0 %>,           // Lead
      2: <%= Setting.find_by(key: 'second_lead_base_rate')&.typed_value || 0 %>,   // Second Lead  
      3: <%= Setting.find_by(key: 'featured_extra_base_rate')&.typed_value || 0 %>, // Featured Extra
      4: <%= Setting.find_by(key: 'teenager_base_rate')&.typed_value || 0 %>,      // Teenager
      5: <%= Setting.find_by(key: 'kid_base_rate')&.typed_value || 0 %>,           // Kid
      6: <%= Setting.find_by(key: 'walk_on_base_rate')&.typed_value || 0 %>       // Walk-on
    };
    
    // Calculate talent costs from active talent categories
    const activeTalentSections = document.querySelectorAll('[id^="talent-category-"]:not(.hidden)');
    let hasTalent = false;
    let baseTalentFeesOnly = 0; // Just the base fees for usage calculation
    let talentCategoryBreakdown = []; // Store breakdown for usage calculation
    
    activeTalentSections.forEach(section => {
      const categoryId = section.id.replace('talent-category-', '');
      const categoryName = section.querySelector('h4').textContent;
      
      // Get the category total (includes base + standby + overtime)
      const categoryTotalElement = section.querySelector(`#category-total-${categoryId}`);
      if (categoryTotalElement) {
        const totalText = categoryTotalElement.textContent.replace(/[R,]/g, '');
        const categoryTotal = parseInt(totalText) || 0;
        
        if (categoryTotal > 0) {
          hasTalent = true;
          talentTotal += categoryTotal;
          
          // Calculate just the base fees (combination totals) for usage calculation
          const combinationTotals = section.querySelectorAll('.combination-total');
          let categoryBaseFees = 0;
          combinationTotals.forEach(total => {
            const value = total.textContent.replace(/[R,]/g, '');
            categoryBaseFees += parseInt(value) || 0;
          });
          
          if (categoryBaseFees > 0) {
            baseTalentFeesOnly += categoryBaseFees;
            talentCategoryBreakdown.push({
              id: categoryId,
              name: categoryName,
              baseFees: categoryBaseFees
            });
          }
          
          const summaryItem = document.createElement('div');
          summaryItem.className = 'flex justify-between';
          summaryItem.innerHTML = `
            <span class="text-sm">${categoryName}</span>
            <span>R ${categoryTotal.toLocaleString()}</span>
          `;
          talentSummary.appendChild(summaryItem);
        }
      }
    });
    
    if (!hasTalent) {
      talentSummary.innerHTML = '<div class="text-gray-500 italic">No talent selected</div>';
    }
    
    // Calculate territory multipliers (additive - sum all selected territories)
    const selectedTerritories = document.querySelectorAll('.territory-checkbox:checked');
    let hasTerritory = false;
    let totalTerritoryPercentage = 0;
    let territoryNames = [];
    
    selectedTerritories.forEach(checkbox => {
      hasTerritory = true;
      const percentage = parseFloat(checkbox.dataset.percentage) || 0;
      const name = checkbox.dataset.territoryName;
      territoryNames.push(name);
      
      // Add all territory percentages together (additive)
      totalTerritoryPercentage += percentage;
    });
    
    // Apply territory multiplier logic
    if (hasTerritory) {
      territoryMultiplier = totalTerritoryPercentage / 100.0;
    }
    
    // Update territory summary
    if (hasTerritory) {
      territoryNames.forEach(name => {
        const summaryItem = document.createElement('div');
        summaryItem.className = 'text-sm';
        summaryItem.innerHTML = name;
        territorySummary.appendChild(summaryItem);
      });
    } else {
      territorySummary.innerHTML = '<div class="text-gray-500 italic">No territories selected</div>';
    }
    
    // Calculate exclusivity fees
    let exclusivityMultiplier = 1.0;
    const exclusivitySelect = document.querySelector('select[name*="exclusivity_type"]');
    if (exclusivitySelect && exclusivitySelect.value) {
      // Get the percentage from the exclusivity options data
      const selectedOption = exclusivitySelect.selectedOptions[0];
      if (selectedOption) {
        const text = selectedOption.textContent;
        const percentageMatch = text.match(/\+(\d+)%/);
        if (percentageMatch) {
          const percentage = parseFloat(percentageMatch[1]) || 0;
          exclusivityMultiplier += (percentage / 100);
        }
      }
    }
    
    // Calculate additional fees
    const unlimitedStills = document.querySelector('input[name*="unlimited_stills"]:checked');
    const unlimitedVersions = document.querySelector('input[name*="unlimited_versions"]:checked');
    
    if (unlimitedStills) additionalFees += talentTotal * 0.15;
    if (unlimitedVersions) additionalFees += talentTotal * 0.15;
    
    
    // Get media multiplier 
    const mediaMultiplier = calculateMediaMultiplier();
    
    // Get duration multiplier from duration selection
    const durationMultiplier = calculateDurationMultiplier();
    
    // Get campaign type for adjustments
    const campaignTypeRadio = document.querySelector('input[name="quotation[product_type]"]:checked');
    const campaignType = campaignTypeRadio ? campaignTypeRadio.value : null;
    
    // NEW CALCULATION STRUCTURE:
    // A) Talent Fees = talentTotal (includes base + standby + overtime)
    const talentFees = talentTotal;
    
    // B) Usage/Buyout = Base talent fees × Territory × Media × Duration × Exclusivity (per category)
    let usageBuyoutTotal = 0;
    const usageBreakdownHtml = [];
    const totalMultiplier = territoryMultiplier * mediaMultiplier * durationMultiplier * exclusivityMultiplier;
    
    talentCategoryBreakdown.forEach(category => {
      let categoryUsage = category.baseFees * totalMultiplier;
      let adjustmentText = '';
      
      // Apply campaign type adjustments
      if (campaignType === 'adult' && category.id === '5') { // Kid category
        categoryUsage *= 0.5; // 50% reduction for adult campaigns
        adjustmentText = ' × 50% (Adult)';
      } else if (campaignType === 'family' && category.id === '5') { // Kid category  
        categoryUsage *= 0.75; // 25% reduction for family campaigns
        adjustmentText = ' × 75% (Family)';
      }
      
      usageBuyoutTotal += categoryUsage;
      
      usageBreakdownHtml.push(`
        <div class="flex justify-between">
          <span>${category.name}: R${category.baseFees.toLocaleString()} × ${totalMultiplier.toFixed(2)}x${adjustmentText}</span>
          <span>R${Math.round(categoryUsage).toLocaleString()}</span>
        </div>
      `);
    });
    
    // C) Total = A + B + Additional Options
    const totalQuote = talentFees + usageBuyoutTotal + additionalFees;
    
    // Update display
    document.getElementById('talent-total').textContent = `R ${talentFees.toLocaleString()}.00`;
    document.getElementById('territory-multiplier').textContent = `${territoryMultiplier.toFixed(2)}x`;
    document.getElementById('media-display-multiplier').textContent = `${mediaMultiplier.toFixed(2)}x`;
    document.getElementById('duration-multiplier').textContent = `${durationMultiplier.toFixed(2)}x`;
    document.getElementById('exclusivity-multiplier').textContent = exclusivityMultiplier > 1 ? `+${Math.round((exclusivityMultiplier - 1) * 100)}%` : '+0%';
    document.getElementById('usage-buyout-total').textContent = `R ${Math.round(usageBuyoutTotal).toLocaleString()}.00`;
    document.getElementById('usage-buyout-breakdown').innerHTML = usageBreakdownHtml.join('');
    document.getElementById('additional-fees').textContent = `R ${additionalFees.toLocaleString()}.00`;
    document.getElementById('total-quote').textContent = `R ${Math.round(totalQuote).toLocaleString()}.00`;
    document.getElementById('current-total').textContent = `R ${Math.round(totalQuote).toLocaleString()}.00`;
  }
  
  // Update preview when form values change
  document.addEventListener('input', function(e) {
    updateQuotePreview();
    
    // Update breakdown summaries when day breakdown inputs change
    if (e.target.name && (e.target.name.includes('talent_count') || e.target.name.includes('days_count'))) {
      const categoryMatch = e.target.name.match(/talent_categories\[(\d+)\]/);
      if (categoryMatch) {
        // Add a small delay to ensure DOM is updated
        setTimeout(() => updateBreakdownSummary(categoryMatch[1]), 10);
      }
    }
    
    // Also update if shoot days change (affects validation)
    if (e.target.name && e.target.name.includes('shoot_days')) {
      // Update all visible breakdown summaries when shoot days change
      document.querySelectorAll('.days-on-set-container:not(.hidden)').forEach(container => {
        const categoryId = container.getAttribute('data-category');
        if (categoryId) {
          setTimeout(() => updateBreakdownSummary(categoryId), 10);
        }
      });
    }
  });
  
  document.addEventListener('change', function(e) {
    updateQuotePreview();
    
    // Also handle change events for breakdown inputs
    if (e.target.name && (e.target.name.includes('talent_count') || e.target.name.includes('days_count'))) {
      const categoryMatch = e.target.name.match(/talent_categories\[(\d+)\]/);
      if (categoryMatch) {
        updateBreakdownSummary(categoryMatch[1]);
      }
    }
  });
  
  // Scroll spy to update sidebar
  window.addEventListener('scroll', function() {
    let current = '';
    sections.forEach(section => {
      const sectionTop = section.offsetTop;
      const sectionHeight = section.clientHeight;
      if (window.pageYOffset >= sectionTop - 200) {
        current = section.getAttribute('id');
      }
    });
    
    sidebarItems.forEach(item => {
      item.classList.remove('font-medium', 'text-blue-600');
      item.classList.add('text-gray-700');
      if (item.dataset.section === current) {
        item.classList.add('font-medium', 'text-blue-600');
        item.classList.remove('text-gray-700');
      }
    });
  });
  
  // Initial calculation
  updateQuotePreview();
});

// Action button functions
function saveDraft() {
  // Add a hidden field to indicate draft status
  const form = document.querySelector('form');
  const draftField = document.createElement('input');
  draftField.type = 'hidden';
  draftField.name = 'save_as_draft';
  draftField.value = '1';
  form.appendChild(draftField);
  
  // Submit the form
  form.submit();
}

function previewQuote() {
  // Open preview in new window/tab
  const form = document.querySelector('form');
  const formData = new FormData(form);
  
  // You can implement preview logic here
  alert('Preview functionality will open quote preview in new window');
  
  // Or redirect to preview page
  // window.open('/quotations/preview?' + new URLSearchParams(formData).toString(), '_blank');
}

// Handle talent category selection
document.querySelectorAll('.talent-btn').forEach(btn => {
  btn.addEventListener('click', function() {
    const categoryId = this.dataset.category;
    const section = document.getElementById(`talent-category-${categoryId}`);
    
    if (this.classList.contains('border-blue-500')) {
      // Remove category
      section.classList.add('hidden');
      this.classList.remove('border-blue-500', 'bg-blue-50');
      this.classList.add('border-gray-300');
    } else {
      // Add category
      section.classList.remove('hidden');
      this.classList.add('border-blue-500', 'bg-blue-50');
      this.classList.remove('border-gray-300');
    }
    
    updateQuotePreview();
  });
});

// Handle rate adjustment plus/minus buttons
document.querySelectorAll('.rate-plus-btn, .rate-minus-btn').forEach(btn => {
  btn.addEventListener('click', function() {
    const categoryId = this.dataset.category;
    const adjustmentInput = document.querySelector(`[data-rate-adjustment-input="${categoryId}"]`);
    const currentValue = parseInt(adjustmentInput.value) || 0;
    const isPlus = this.classList.contains('rate-plus-btn');
    const increment = 100; // R100 increments
    
    const newValue = isPlus ? currentValue + increment : currentValue - increment;
    adjustmentInput.value = newValue;
    
    updateAdjustedRate(categoryId);
    updateCategoryTotal(categoryId);
    updateQuotePreview();
  });
});

function updateAdjustedRate(categoryId) {
  const baseRates = {
    1: <%= Setting.find_by(key: 'lead_base_rate')&.typed_value || 0 %>,
    2: <%= Setting.find_by(key: 'second_lead_base_rate')&.typed_value || 0 %>,
    3: <%= Setting.find_by(key: 'featured_extra_base_rate')&.typed_value || 0 %>,
    4: <%= Setting.find_by(key: 'teenager_base_rate')&.typed_value || 0 %>,
    5: <%= Setting.find_by(key: 'kid_base_rate')&.typed_value || 0 %>,
    6: <%= Setting.find_by(key: 'walk_on_base_rate')&.typed_value || 0 %>
  };
  
  const adjustmentInput = document.querySelector(`[data-rate-adjustment-input="${categoryId}"]`);
  const adjustment = parseInt(adjustmentInput.value) || 0;
  const baseRate = baseRates[categoryId] || 0;
  const adjustedRate = baseRate + adjustment;
  
  const adjustedRateElement = document.getElementById(`adjusted-rate-${categoryId}`);
  if (adjustedRateElement) {
    const adjustmentText = adjustment >= 0 ? `+R${adjustment}` : `-R${Math.abs(adjustment)}`;
    adjustedRateElement.textContent = `${adjustmentText} = R${adjustedRate.toLocaleString()}`;
  }
  
  return adjustedRate;
}

</script>